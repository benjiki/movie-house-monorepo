
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MoviesScalarFieldEnum = {
  id: 'id',
  movieName: 'movieName',
  movieImage: 'movieImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId',
  movieCategoryId: 'movieCategoryId'
};

exports.Prisma.MovieCategoryScalarFieldEnum = {
  id: 'id',
  movieCategoryName: 'movieCategoryName',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  seriesName: 'seriesName',
  seriesImage: 'seriesImage',
  seriesSeason: 'seriesSeason',
  seriesEpisode: 'seriesEpisode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId',
  seriesCategoryId: 'seriesCategoryId'
};

exports.Prisma.SeriesCategoryScalarFieldEnum = {
  id: 'id',
  seriesCategoryName: 'seriesCategoryName',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId'
};

exports.Prisma.OtherProductsScalarFieldEnum = {
  id: 'id',
  productName: 'productName',
  productImage: 'productImage',
  otherProductType: 'otherProductType',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId',
  otherProductCategoryId: 'otherProductCategoryId'
};

exports.Prisma.OtherProductCategoryScalarFieldEnum = {
  id: 'id',
  otherProductCategoryName: 'otherProductCategoryName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  adminId: 'adminId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.OtherProductType = exports.$Enums.OtherProductType = {
  BRAND_NEW: 'BRAND_NEW',
  REFURBISHED: 'REFURBISHED',
  SLIGHTLY_USED: 'SLIGHTLY_USED',
  USED: 'USED',
  HEAVILY_USED: 'HEAVILY_USED',
  FOR_PARTS: 'FOR_PARTS'
};

exports.Prisma.ModelName = {
  movies: 'movies',
  movieCategory: 'movieCategory',
  series: 'series',
  seriesCategory: 'seriesCategory',
  otherProducts: 'otherProducts',
  otherProductCategory: 'otherProductCategory'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Project Management\\multiprojects\\moviehouse\\packages\\product-db\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Project Management\\multiprojects\\moviehouse\\packages\\product-db\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel movies {\n  id         Int      @id @default(autoincrement())\n  movieName  String\n  movieImage String\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  adminId    Int\n\n  movieCategoryId Int\n  movieCategory   movieCategory @relation(fields: [movieCategoryId], references: [id])\n}\n\nmodel movieCategory {\n  id                Int      @id @default(autoincrement())\n  movieCategoryName String\n  price             Float\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  adminId           Int\n\n  movies movies[] // One category to many movies\n}\n\nmodel series {\n  id            Int      @id @default(autoincrement())\n  seriesName    String\n  seriesImage   String\n  seriesSeason  Int\n  seriesEpisode Int\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n  adminId       Int\n\n  seriesCategoryId Int\n  seriesCategory   seriesCategory @relation(fields: [seriesCategoryId], references: [id])\n}\n\nmodel seriesCategory {\n  id                 Int      @id @default(autoincrement())\n  seriesCategoryName String\n  price              Float\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n  adminId            Int\n\n  series series[] // One category to many series\n}\n\nmodel otherProducts {\n  id               Int              @id @default(autoincrement())\n  productName      String\n  productImage     String\n  otherProductType OtherProductType @default(BRAND_NEW)\n  price            Float\n  createdAt        DateTime         @default(now())\n  updatedAt        DateTime         @updatedAt\n  adminId          Int\n\n  otherProductCategoryId Int\n  otherProductCategory   otherProductCategory @relation(fields: [otherProductCategoryId], references: [id])\n}\n\nmodel otherProductCategory {\n  id                       Int             @id @default(autoincrement())\n  otherProductCategoryName String\n  createdAt                DateTime        @default(now())\n  updatedAt                DateTime        @updatedAt\n  adminId                  Int\n  otherProducts            otherProducts[]\n}\n\nenum OtherProductType {\n  BRAND_NEW\n  REFURBISHED\n  SLIGHTLY_USED\n  USED\n  HEAVILY_USED\n  FOR_PARTS\n}\n",
  "inlineSchemaHash": "00a82a57d1f22ca5f051fdb047cf5eb068ff161a627aedd7ff912d9c0fde8d47",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"movies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"movieName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movieImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"movieCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"movieCategory\",\"kind\":\"object\",\"type\":\"movieCategory\",\"relationName\":\"movieCategoryTomovies\"}],\"dbName\":null},\"movieCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"movieCategoryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"movies\",\"kind\":\"object\",\"type\":\"movies\",\"relationName\":\"movieCategoryTomovies\"}],\"dbName\":null},\"series\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesSeason\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesEpisode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesCategory\",\"kind\":\"object\",\"type\":\"seriesCategory\",\"relationName\":\"seriesToseriesCategory\"}],\"dbName\":null},\"seriesCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seriesCategoryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"series\",\"relationName\":\"seriesToseriesCategory\"}],\"dbName\":null},\"otherProducts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otherProductType\",\"kind\":\"enum\",\"type\":\"OtherProductType\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"otherProductCategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"otherProductCategory\",\"kind\":\"object\",\"type\":\"otherProductCategory\",\"relationName\":\"otherProductCategoryTootherProducts\"}],\"dbName\":null},\"otherProductCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"otherProductCategoryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"otherProducts\",\"kind\":\"object\",\"type\":\"otherProducts\",\"relationName\":\"otherProductCategoryTootherProducts\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

